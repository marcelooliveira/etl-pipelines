name: Python ETL CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: python -m unittest test_etl.py

    - name: Run ETL pipeline
      run: python etl.py

    - name: List files *before* upload
      run: |
        echo "Current directory:"
        pwd
        echo "Listing files in data directory:"
        ls -l data/
        echo "Listing files in the root directory:"
        ls -l

    - name: Upload markdown table as artifact
      uses: actions/upload-artifact@v4
      with:
        name: crypto-markdown
        path: data/crypto.md

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ vars.AWS_REGION }}  # Replace with your AWS region

    - name: Create S3 bucket if it doesn't exist
      run: |
        aws s3 ls s3://${{ vars.S3_BUCKET }}/ || aws s3 mb s3://${{ vars.S3_BUCKET }} --region ${{ vars.AWS_REGION }}

    - name: Upload to S3 with public access and print URL
      run: |
        aws s3 cp data/crypto.md s3://${{ vars.S3_BUCKET }}/crypto.md --acl public-read
        echo "Uploaded to: https://s3.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.S3_BUCKET }}/crypto.md"